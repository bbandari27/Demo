#!/bin/bash

# redirect all output to a log file
exec > >(tee -a /var/log/bootstrap.log) 2>&1

# Echo statements to indicate script start
echo "script started at $(TZ='America/New_York' date)"

# mount external 100G ebs volume on /data

device=$(lsblk -o NAME,TYPE,SIZE -l | grep '100G' | awk '{if($2=="part") {found=1; print $1}}; END {if(!found) print $1}')
mount_point="/data"
filesystem="xfs"

echo "assigned variables for mounting"

# Check if the mount point exists, create if not
if [ ! -d "$mount_point" ]; then
    mkdir -p "$mount_point"
fi

echo "/data directory is present"

# Check if entry already exists in /etc/fstab
if grep -q "$device" /etc/fstab; then
    echo "Entry already exists in /etc/fstab. Skipping..."
else
    # Add entry to /etc/fstab
    echo "/dev/$device $mount_point $filesystem defaults 0 0" | sudo tee -a /etc/fstab
    systemctl daemon-reload
    echo "Entry added to /etc/fstab."
fi

# Mount the volume
echo "Mounting on /data"
mount -a
echo "Mounting DONE on /data"

# Verify the mount
echo "Validating Mount on /data"
if mountpoint -q "$mount_point"; then
    echo "Volume successfully mounted on $mount_point."
else
    echo "Mounting failed. Please check the configuration."
fi

# Download and install CHEF
echo "Download and install CHEF"
# Update the package manager
yum update -y

# Install packages to download Chef package
yum install -y wget
yum install -y libxcrypt-compat
yum install -y dmidecode

#create /tmp/chef dir if not exists
mkdir -p /tmp/chef

# copy the Chef rpm package from s3 for aml2
aws s3 cp s3://devops.kabbage/chef-client/chef-18.4.2-1.el7.x86_64.rpm /tmp/chef/chef.rpm

install_chef() {
    echo "Installing chef..."
    rpm --ignoreos -ivh /tmp/chef/chef.rpm
}

if rpm -qa | grep -q '^chef'; then
    echo "Chef is installed."
else
    echo "Chef is not installed. Installing..."
    install_chef
fi

echo "Connect to chef server"
# Connect to chef server
# https://enterprise-confluence.aexp.com/confluence/display/KAM/Manually+bootstrapping+a+host#Manuallybootstrappingahost-LINUX

node_name=${node_name}
environment="qa"
org="prod-kabbage-com"
cat >/etc/first-boot.json<< EOF
{
    "run_list": [
        "role[base-role]",
        "role[syslog-ng]"
    ]
}
EOF

aws s3 cp s3://*/chef-infra/validator.pem /etc/chef/validator.pem

cat >/etc/chef/client.rb<< EOT
     log_location STDOUT
     chef_server_url 'https://chef-infra-internal.kabbage.farm/organizations/$org'
     validation_client_name '_svcchefops'
     validation_key '/etc/chef/validator.pem'
     environment "$environment"
     node_name "$node_name"
EOT

chef-client -j /etc/first-boot.json --chef-license accept

# Echo statements to indicate script end
echo "script ended at $(TZ='America/New_York' date)"
